## IMDb function
# thanks to https://github.com/bgr/imdb-cli
# and http://www.imdbapi.com/

# need TITLE_NAME
#      DATE
# return IMDB_RESPONSE ("True" or "False")
get_imdb_response_title () {
	IMDB_RESPONSE=`python $IMDB_TOOL -t "$TITLE_NAME" -y $DATE | sed -n '/response/{n;p;}'`
}

# need IMDB_FILE
# return IMDB_RESPONSE ("True" or "False")
get_imdb_response_file () {
 	IMDB_RESPONSE=`sed -n '/response/{n;p;}' $IMDB_FILE`
}

# need TITLE_NAME
#      DATE
# return IMDB_ID
get_imdb_id () {
	IMDB_ID=`python $IMDB_TOOL -t "$TITLE_NAME" -y $DATE | sed -n '/imdbid/{n;p;}'`
}

# need IMDB_ID
download_imdb_poster () {
	python $IMDB_TOOL -i $IMDB_ID | wget `sed -n '/poster/{n;p;}'` -O cover.jpg
}

# need IMDB_ID
# return IMDB_DIRECTOR
#        IMDB_WRITER
#        IMDB_VOTES
#        IMDB_RATING
#        IMDB_RUNTIME
#        IMDB_ACTORS
#        IMDB_RATED
#        IMDB_PLOT
#        IMDB_GENRE
get_imdb_informations () {
	IMDB_FILE="$BASE_WORKING_FILE-imdb.txt"
	python $IMDB_TOOL -i $IMDB_ID > $IMDB_FILE
	get_imdb_response_file
	if  [[ $IMDB_RESPONSE == "True" ]]; then
		IMDB_DIRECTOR=`sed -n '/director/{n;p;}' $IMDB_FILE`
		IMDB_WRITER=`sed -n '/writer/{n;p;}' $IMDB_FILE`
		IMDB_VOTES=`sed -n '/imdbvotes/{n;p;}' $IMDB_FILE`
		IMDB_RATING=`sed -n '/imdbrating/{n;p;}' $IMDB_FILE`
		IMDB_RUNTIME=`sed -n '/runtime/{n;p;}' $IMDB_FILE`
		IMDB_ACTORS=`sed -n '/actors/{n;p;}' $IMDB_FILE`
		IMDB_RATED=`sed -n '/rated/{n;p;}' $IMDB_FILE`
		IMDB_PLOT=`sed -n '/plot/{n;p;}' $IMDB_FILE`
		IMDB_GENRE=`sed -n '/genre/{n;p;}' $IMDB_FILE`
	else
		echo -ne " No IMdb informations found ! Please check IMdb ID $IMDB_ID !\n"
		echo -ne " Skip IMdb informations.\n" && sleep 1
		# to avoid errors + nfo/xmltags issues
		IMDB_ID=""
	fi
}