## check functions

checkandsource_wazzuf_files () {
	if [ ! -f $CONF_FILE ]; then
		echo -ne "\n *************************************\n"
		echo -ne " $CONF_FILE configuration file not found !\n"
		echo -ne " Copying an example: please fill some informations in it !\n"
		mkdir -p $CONF_PATH_BASE
		cp -v $CONF_FILE_EXAMPLE $CONF_FILE
		echo -ne " Exiting...\n"
		echo -ne " *************************************\n"
		exit 1
	else
		if [[ $DEBUG == "1" ]]; then echo "DEBUG Sourcing $CONF_FILE..."; fi
		source $CONF_FILE
	fi
	for WFILE in $WAZZUF_FILES
	do
		if [ ! -f $WFILE ]; then
			echo -ne "\n *************************************\n"
			echo -ne " $WFILE file not found ! Exiting...\n"
			echo -ne " *************************************\n"
		        exit 1
		else	
			if [[ $DEBUG == "1" ]]; then echo "DEBUG Sourcing $WFILE..."; fi
			source $WFILE
		fi
	done
}

# check physical BD/DVD (only one device) or ISO_DVD/ISO_BD file presence
check_device () {
	case ${1} in
	BD )
		DEVICE_TEST="-d `mount | grep udf | sed s/" type udf "/""/g | cut -d '(' -f 1 | cut -d ' ' -f 3-10`/BDMV/"
		DEVICE_NAME="BD"
		WORKING_FILES=".m2ts"
		;;
	M2TS )
		DEVICE_TEST="-f '$M2TS_FILE_PATH'"
		DEVICE_NAME="$M2TS_FILE_PATH"
		WORKING_FILES="?"
		;;
	DVD )
		DEVICE_TEST="-d `mount | grep udf | sed s/" type udf "/""/g | cut -d '(' -f 1 | cut -d ' ' -f 3-10`/VIDEO_TS/"
		DEVICE_NAME="DVD"
		WORKING_FILES=".vob"
		;;
	ISO_DVD | ISO_BD )
		DEVICE_TEST="-f '$SOURCE_DIRECTORY/$ISO_FILE'"
		DEVICE_NAME="'$SOURCE_DIRECTORY/$ISO_FILE' iso file"
		if [[ ${1} == "ISO_DVD" ]]; then WORKING_FILES=".vob"; else WORKING_FILES=".m2ts"; fi
		;;
	* )
		echo "Unexpected error: No device to check !"
		;;
	esac

	if [[ $DEBUG == "1" ]]; then
		echo "DEBUG DEVICE_TEST $DEVICE_TEST"
		echo "DEBUG DEVICE_NAME $DEVICE_NAME"
		echo "DEBUG WORKING_FILES $WORKING_FILES"
	fi

	if [ ! "${DEVICE_TEST}" ]
	then
		echo -ne "\n *************************************\n"
		echo -ne " $DEVICE_NAME not found !\n"
		case ${2} in
		PRE )
			echo -ne " Exiting...\n"
			echo -ne " *************************************\n"
			exit 1
			;;
		RIP )
			echo -ne " Do you you want to bypass media source (y/N)?\n"
			echo -ne " Note: Working files ($WORKING_FILES,...) had to be already extracted.\n"
			echo -ne " *************************************\n"
			read DEVICE_ANSWER
			case $DEVICE_ANSWER in
				n* | N* | "" )
					echo " Quit." && exit 0
					;;
				y* | Y* )
					echo " Bypassing media source."
					;;
			esac
			;;
		esac
	fi
}

# mount/umount BD iso file
iso_bd_manage () {
	case ${1} in
	mount )
		# check if ISO_BD not already mounted
		if [[ `mount | grep udf | grep $ISO_MOUNT_POINT | wc -l` == "1" ]]; then
			echo "$ISO_MOUNT_POINT mount point already used"
			exit 1
		else			
			echo "Mount ISO_BD to $ISO_MOUNT_POINT"
			sudo mkdir -p $ISO_MOUNT_POINT
			# mounted read-only to avoid warning
			if [[ $DEBUG == "1" ]]; then echo "DEBUG sudo mount -r -o loop $ISO_FILE_PATH $ISO_MOUNT_POINT";fi
			sudo mount -r -o loop $ISO_FILE_PATH $ISO_MOUNT_POINT
		fi
		;;
	umount )
		sudo umount $ISO_MOUNT_POINT
		;;
	esac
}

# check imdb-cli
check_imdb () {
	if [ ! -x /usr/bin/imdbtool ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install imdb-cli ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_nice () {
	if [ ! -x "/usr/bin/nice" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install nice (coreutils) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_ionice () {
	if [ ! -x "/usr/bin/ionice" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install ionice (util-linux) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_ogmtools () {
	if [ ! -x "/usr/bin/dvdxchap" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install dvdxchap (ogmtools) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_lsdvd () {
	if [ ! -x "/usr/bin/lsdvd" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install lsdvd ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_avconv () {
	if [ ! -x "/usr/bin/avconv" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install avconv (libav-tools) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_7z () {
	if [ ! -x "/usr/bin/7z" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install 7z (p7zip-full) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_genisoimage () {
	if [ ! -x "/usr/bin/genisoimage" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install genisoimage ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_mplayer () {
	if [ ! -x "/usr/bin/mplayer" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install mplayer ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_mencoder () {
	if [ ! -x "/usr/bin/mencoder" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install mencoder ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_cvlc () {
	if [ ! -x "/usr/bin/cvlc" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install cvlc (vlc) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_oggenc () {
	if [ ! -x "/usr/bin/oggenc" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install oggenc (vorbis-tools) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi	
}

check_lame () {
	if [ ! -x "/usr/bin/lame" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install lame ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_opusenc () {
        if [ ! -x "/usr/bin/opusenc" ]; then
                echo -ne "\n *************************************\n"
                echo -ne " Please install opusenc (opus-tools) ! Exiting... \n"
                echo -ne " *************************************\n"
                exit 1
        fi
}

check_imagemagick () {
	if [ ! -x "/usr/bin/convert" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install convert (imagemagick) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

check_mkvmerge () {
	if [ ! -x "/usr/bin/mkvmerge" ]; then
		echo -ne "\n *************************************\n"
		echo -ne " Please install mkvmerge (mkvtoolnix) ! Exiting... \n"
		echo -ne " *************************************\n"
		exit 1
	fi
}

wazzuf_usage () {
	echo -ne "\n Usage : $0 [ Video Codec ] [ Audio 1 Codec ] [ Audio 2 Codec ]\n"
	exit 1
}
