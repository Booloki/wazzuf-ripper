## subtitle check/extract function

# DVD only - .idx and .sub files
# BD - sup files
subtitle_rip () {
	case $SOURCE in
	DVD | ISO_DVD )
		if [ -f "$SUBTITLE_FILE" ]; then
			FILE_NAME=$SUBTITLE_FILE
			file_exists
	        else
			check_mencoder
			if [[ $WAZZUF_UI == "GUI" ]]; then
				nice -n $NICENESS mencoder -dvd-device "$MPLAYER_DEVICE" dvd://$TITLE_NUMBER $MPLAYER_CHAPTERS \
					-vobsubout $SUB_FILE -vobsuboutindex 0 -sid $SUBTITLE_SID \
					-o /dev/null -nosound -ovc frameno 2>/dev/null \
					| awk -vRS="\r" '$1 ~ /Pos/ {gsub(/Pos:/," ");gsub(/%\)/," ");gsub(/ \(/," ");print $3"\n#Position :\\t"$1"\\nFrame :\\t"$2"\\nProgression :\\t"$3"%\\nFrame Rate :\\t"$4"\\nTime Remaining :\\t"$6; fflush();}' \
					| zenity --progress --auto-close --title="$ZEN_TITLE - subtitle $SUBTITLE_SID extracting"
				if [ $? = "1" ]; then wazzuf_quit; fi
			else
				echo -ne "\n *************************************\n"
	        	        echo " Extracting subtitle $SUBTITLE_SID to $SUBTITLE_FILE "
	        	        echo -ne " *************************************\n"
				if [[ $DEBUG == "1" ]]; then echo "DEBUG nice -n $NICENESS mencoder -dvd-device \"$MPLAYER_DEVICE\" dvd://$TITLE_NUMBER $MPLAYER_CHAPTERS -vobsubout $SUB_FILE -vobsuboutindex 0 -sid $SUBTITLE_SID -o /dev/null -nosound -ovc frameno"; fi
				nice -n $NICENESS mencoder -dvd-device "$MPLAYER_DEVICE" dvd://$TITLE_NUMBER $MPLAYER_CHAPTERS \
					-vobsubout $SUB_FILE -vobsuboutindex 0 -sid $SUBTITLE_SID \
					-o /dev/null -nosound -ovc frameno
			fi
		fi
		;;
	BD )
		if [ -f "$SUBTITLE_FILE" ]; then
			FILE_NAME=$SUBTITLE_FILE
			file_exists
		else
			FILE_NAME="$SUBTITLE_FILE subtitle"
			SOURCE_NAME="${SOURCE_DIRECTORY}"
			dont_exists_warn
		fi
		;;
	esac
}

# Check srt files encoding and provide character-set to encode
# Or Warning if charset unrecognized
# return MERGE_SUBTITLE_CHARSET
subtitle_srt_check () {
	SUBTITLE_TYPE=`file "$SUBTITLE_FILE_FORCE_PATH"`
	SUBTITLE_MIME=`file -b --mime-encoding "$SUBTITLE_FILE_FORCE_PATH"`
	if [[ `echo $SUBTITLE_TYPE | grep Unicode` == "" ]]; then
		case $SUBTITLE_MIME in
			iso-8859-1 )
				SUBTITLE_CHARSET="ISO-8859-1"
				MERGE_SUBTITLE_CHARSET="--sub-charset 0:$SUBTITLE_CHARSET"
				if [[ $DEBUG == "1" ]]; then
					echo "DEBUG SUBTITLE_MIME $SUBTITLE_MIME"
					echo "DEBUG SUBTITLE_CHARSET $SUBTITLE_CHARSET"
				fi
				;;
			unknown-8bit )
				SUBTITLE_CHARSET="WINDOWS-1252"
				MERGE_SUBTITLE_CHARSET="--sub-charset 0:$SUBTITLE_CHARSET"
				if [[ $DEBUG == "1" ]]; then
					echo "DEBUG SUBTITLE_MIME $SUBTITLE_MIME"
					echo "DEBUG SUBTITLE_CHARSET $SUBTITLE_CHARSET"
				fi
				;;
			* )
				# unrecognized charset
				SUBTITLE_CHARSET=""
				MERGE_SUBTITLE_CHARSET=""
				if [[ $DEBUG == "1" ]]; then
					echo "DEBUG SUBTITLE_MIME $SUBTITLE_MIME"
					echo "DEBUG SUBTITLE_CHARSET TODO"
				fi
				if [[ $WAZZUF_UI == "GUI" ]]; then
					zenity --warning --title "$ZEN_TITLE" \
						--text "Provided subtitle is not Unicode and unrecognized." \
						--timeout=2
				else
					echo " Warning. Provided subtitle is not Unicode and unrecognized."
					echo " $SUBTITLE_TYPE" && sleep 2
				fi
				;;
		esac
	else
		MERGE_SUBTITLE_CHARSET=""
	fi
}
