## mkv xml tag file generation


# If empty tag: ugly but not really important
# need 	VIDEO_TYPE
#	TAG_FILE
#	TEMPLATE_FILE_MOVIE
#	TEMPLATE_FILE_MUSIC
#	TEMPLATE_FILE_SHOW
#	XMLTAG_DATE_RELEASE
#	XMLTAG_DATE_ENCODED
#	XMLTAG_ENCODED_BY
#	XMLTAG_COMMENT
#	XMLTAG_DATE_RELEASE
#	TITLE_NAME
#	DIRECTOR_NAME
#	ARTIST_NAME
#	SEASON_NUMBER
#	EPISODE_NUMBER
#	EPISODES_TOTAL_NUMBER
#	EPISODE_NAME
# create TAG_FILE
xml_tagging () {
	case $VIDEO_TYPE in
	MOVIE )
		TEMPLATE_FILE=$TEMPLATE_FILE_MOVIE
			if [ ! -f $TEMPLATE_FILE ]; then
				echo -ne "\n *************************************\n"
				echo " $TEMPLATE_FILE file does not exists. Skipping..."  && sleep 1
				echo -ne " *************************************\n"
			else
				echo -ne "\n *************************************\n"
				echo " Generate xml tags file with probed informations... "
				cp -v $TEMPLATE_FILE $TAG_FILE

				xml_tagging_base

				XMLTAG_TITLE="$TITLE_NAME"
				sed -i s%XMLTAG_TITLE%"$XMLTAG_TITLE"% $TAG_FILE

				XMLTAG_DIRECTOR="$DIRECTOR_NAME"
				sed -i s%XMLTAG_DIRECTOR%"$XMLTAG_DIRECTOR"% $TAG_FILE
				echo -ne " *************************************\n"
			fi
		;;
	MUSIC )
		TEMPLATE_FILE=$TEMPLATE_FILE_MUSIC
			if [ ! -f $TEMPLATE_FILE ]; then
				echo -ne "\n *************************************\n"
				echo " $TEMPLATE_FILE file does not exists. Skipping..."  && sleep 1
				echo -ne " *************************************\n"
			else
				echo -ne "\n *************************************\n"
				echo " Generate xml tags file with probed informations... "
				cp -v $TEMPLATE_FILE $TAG_FILE

				xml_tagging_base

				XMLTAG_TITLE="$TITLE_NAME"
				sed -i s%XMLTAG_TITLE%"$XMLTAG_TITLE"% $TAG_FILE

				XMLTAG_ARTIST="$ARTIST_NAME"
				sed -i s%XMLTAG_ARTIST%"$XMLTAG_ARTIST"% $TAG_FILE
				echo -ne " *************************************\n"
			fi
		;;
	SHOW )
		TEMPLATE_FILE=$TEMPLATE_FILE_SHOW
			if [ ! -f $TEMPLATE_FILE ]; then
				echo -ne "\n *************************************\n"
				echo " $TEMPLATE_FILE file does not exists. Skipping..."  && sleep 1
				echo -ne " *************************************\n"
			else
				echo -ne "\n *************************************\n"
				echo " Generate xml tags file with probed informations... "
				cp -v $TEMPLATE_FILE $TAG_FILE

				xml_tagging_base

				XMLTAG_SHOW="$TITLE_NAME"
				sed -i s%XMLTAG_SHOW%"$XMLTAG_SHOW"% $TAG_FILE

				# Season
				XMLTAG_SEASON="$SEASON_NUMBER"
				sed -i s%XMLTAG_SEASON%"$XMLTAG_SEASON"% $TAG_FILE

				# episode number
				XMLTAG_EPISODE_NUMBER="$EPISODE_NUMBER"
				sed -i s%XMLTAG_EPISODE_NUMBER%"$XMLTAG_EPISODE_NUMBER"% $TAG_FILE

				# total episode number (in the season)
				XMLTAG_EPISODE_TOTAL="$EPISODES_TOTAL_NUMBER"
				sed -i s%XMLTAG_EPISODE_TOTAL%"$XMLTAG_EPISODE_TOTAL"% $TAG_FILE

				# episode title
				XMLTAG_EPISODE_TITLE="$EPISODE_NAME"
				sed -i s%XMLTAG_EPISODE_TITLE%"$XMLTAG_EPISODE_TITLE"% $TAG_FILE
				echo -ne " *************************************\n"
			fi
		;;
	esac
}

# Common to 3 templates: XMLTAG_DATE_RELEASE XMLTAG_DATE_ENCODED XMLTAG_ENCODED_BY XMLTAG_COMMENT
xml_tagging_base () {
	# release date
	sed -i s%XMLTAG_DATE_RELEASE%"$XMLTAG_DATE_RELEASE"% $TAG_FILE
	# encoded date
	sed -i s%XMLTAG_DATE_ENCODED%"$XMLTAG_DATE_ENCODED"% $TAG_FILE	
	# signature
	sed -i s%XMLTAG_ENCODED_BY%"$XMLTAG_ENCODED_BY"% $TAG_FILE	
	# comment
	sed -i s%XMLTAG_COMMENT%"$XMLTAG_COMMENT"% $TAG_FILE
}
