## Audio extract/encode function

# audio_rip
# need 	AUDIO_AID
#	AUDIO_SOURCE
#	AUDIO_LANG
#	AUDIO_NAME
#	CODEC_AUDIO
#	DTS_FILE
#	WAV_FILE
#	MP3_FILE
#	OGG_FILE
#	AC3_FILE
#
# return AUDIO_FILE
audio_rip () {

	# Audio source format
        case $AUDIO_SOURCE in
	# TOTEST accept DTS/DTS-HD to mkvmerge
	DTS )
		AUDIO_SOURCE_FILE=$DTS_FILE
		;;
        AC3 )
		AUDIO_SOURCE_FILE=$AC3_FILE
		;;
	* )
		echo -ne "\n *************************************\n"
		echo " $AUDIO_SOURCE : audio source format not recognized ! Exiting..."
		echo -ne " *************************************\n"
		exit 1
		;;
	esac

	# extract audio from local working file
	case $CODEC_AUDIO in
	DTS | DTS-HD | AC3 | AC351 )
		# extract AC3/DTS
		if [ -f $AUDIO_SOURCE_FILE ]
		then
			echo -ne "\n *************************************\n"
			echo " $DTS_FILE exists, next..." && sleep 1
			echo -ne " *************************************\n"
		else
			ionice -c $IONICENESS nice -n $NICENESS mplayer $SOURCE_FILE -aid $AUDIO_AID -dumpaudio -dumpfile $AUDIO_SOURCE_FILE
			# works with mencoder too but output has an empty video track... (.avi in fact)
#			ionice -c $IONICENESS nice -n $NICENESS mencoder -oac copy -ovc copy -aid $AUDIO_AID $SOURCE_FILE -o $AUDIO_SOURCE_FILE
		fi
		;;
        VORBIS | MP3 )
		# extract wave
		if [ ! -f $WAV_FILE ]; then
			 # takes a long time....
	                ionice -c $IONICENESS nice -n $NICENESS mplayer $SOURCE_FILE -aid $AUDIO_AID -ao pcm:file=$WAV_FILE -vc null -vo null
		else
	                echo -ne "\n *************************************\n"
	                echo " Wave file exists. Next..."  && sleep 1
        	        echo -ne " *************************************\n"
		fi
                ;;
	* )
		echo -ne "\n *************************************\n"
		echo " $CODEC_AUDIO : audio codec not recognized ! Exiting..."
		echo -ne " *************************************\n"
		exit 1
		;;
        esac

        case $CODEC_AUDIO in
	DTS | DTS-HD )
		AUDIO_FILE=$DTS_FILE
       		if [ -f $AUDIO_FILE ]
       		then
			echo -ne "\n *************************************\n"
			echo " $AUDIO_FILE exists, next..." && sleep 1
			echo -ne " *************************************\n"
		else
			echo -ne "\n *************************************\n"
			echo " $AUDIO_FILE should already exist but not here ! exiting..."
			echo -ne " *************************************\n"
			exit 1	
		fi
		;;
        AC3 | AC351)
		AUDIO_FILE=$AC3_FILE
		if [ -f $AUDIO_FILE ]
		then
			echo -ne "\n *************************************\n"
			echo " $AUDIO_FILE exists, next..." && sleep 1
			echo -ne " *************************************\n"
		else
			# DTS to AC3
			# to much time ! cause not multithreaded ?
#				dcadec -o $DTS_FILE | aften - $AUDIO_FILE -b $AUDIO_AC3_QUAL
			nice -n $NICENESS ffmpeg -threads $AUDIO_AC3_THREADS -i $DTS_FILE -acodec ac3 -ab $AUDIO_AC3_QUAL -y $AUDIO_FILE
		fi
		;;
	VORBIS )
		# audio ogg vorbis encode
		AUDIO_FILE=$OGG_FILE
		if [ -f $AUDIO_FILE ]
	        then
	             	echo -ne "\n *************************************\n"
	                echo " $AUDIO_FILE exists, next..." && sleep 1
        	     	echo -ne " *************************************\n"
	        else
			# multithread option ?
			nice -n $NICENESS oggenc $WAV_FILE -q $AUDIO_OGG_QUAL -o $OGG_FILE
			# to get 5.1 vorbis ! but wave file had to be 5.1: how to ? (and DTS and AC3 not recognized...)
#			--advanced-encode-option disable_coupling

			# still experimental in ffmpeg (test: not working...)
#			nice -n $NICENESS ffmpeg -i $DTS_FILE -acodec vorbis -strict experimental -ab 320000 -y $OGG_FILE
			# work from original source file (m2ts ok) but don't take the official aid... ffmpeg -i $SOURCE_FILE to show complete map
			# + possibility to have vorbis 5.1 (-ac 6) tip: low the qual
#			nice -n $NICENESS ffmpeg -i $SOURCE_FILE -map 0:2 -vn -sn -acodec libvorbis -aq $AUDIO_OGG_QUAL -ac 2 $OGG_FILE
			# does not work with mencoder too...
#			nice -n $NICENESS mencoder $DTS_FILE -v -novideo -ovc frameno -oac lavc -lavcopts acodec=vorbis:abitrate=320 -o Rome.S02.E1.4354-fr-test.avi
#			mencoder -oac copy -ovc copy -aid 0 sample.mkv -o sample.mp4
			# mplayer test
#			mplayer 00024.m2ts -vo null -vc null -aid 4352 -ao pcm:fast:file=audio-en-51.pcm -ac ffac3 -channels 6 faac --mpeg-vers 4 -q 108 -c 16800 -I 2,6 audio-en-51.pcm
		fi
		;;
	MP3 )
		# audio mp3 encode (but lame not multithreaded...)
		AUDIO_FILE=$MP3_FILE
		if [ -f $AUDIO_FILE ]
	        then
	             	echo -ne "\n *************************************\n"
	                echo " $AUDIO_FILE exists, next..." && sleep 1
        	     	echo -ne " *************************************\n"
	        else
			# lame mode choice
			case $AUDIO_MP3_MODE in
			        CBR | cbr )
					nice -n $NICENESS lame --scale $AUDIO_MP3_VOL -b $AUDIO_MP3_CBR -h $WAV_FILE $AUDIO_FILE
					;;
			        VBR | vbr )
					nice -n $NICENESS lame --scale $AUDIO_MP3_VOL -V $AUDIO_MP3_VBR -h $WAV_FILE $AUDIO_FILE
					;;
			        * )
					echo -ne "\n *************************************\n"
					echo " $AUDIO_MP3_MODE : lame mp3 encoding mode not recognized ! Exiting..."
					echo -ne " *************************************\n"
					exit 1
					;;
			esac
			# with ffmpeg (need libavcodec-extra-52) but -threads 4 doesn't work...)
#			nice -n ffmpeg -threads 4 -i $WAV_FILE $AUDIO_FILE	
			# with mencoder (doesn't work even with -vc null -vo null OR -novideo)
#			nice -n $NICENESS mencoder $WAV_FILE -oac mp3lame -o $AUDIO_FILE -novideo -vc null
		fi
		;;
	esac
}
